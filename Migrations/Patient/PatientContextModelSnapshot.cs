// <auto-generated />
using System;
using AvansFysio.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AvansFysio.Migrations.Patient
{
    [DbContext(typeof(PatientContext))]
    partial class PatientContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AvansFysio.Models.Behandelplan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BehandelPlanNaam")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("Duur")
                        .HasColumnType("int");

                    b.Property<int>("Hoeveel")
                        .HasColumnType("int");

                    b.Property<int?>("PatientId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PatientId");

                    b.ToTable("Behandelplan");
                });

            modelBuilder.Entity("AvansFysio.Models.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Behandeling")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("DatumAanmelding")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("DatumOntslag")
                        .HasColumnType("Datetime");

                    b.Property<string>("DiagnoseCode")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("HoofdBehandelaar")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("IntakeGedaanDoor")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Leeftijd")
                        .HasColumnType("int");

                    b.Property<string>("MedewerkerOfStudent")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Omschrijving")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Opmerkingen")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<string>("onderSupervisieVan")
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("AvansFysio.Models.Behandelplan", b =>
                {
                    b.HasOne("AvansFysio.Models.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId");

                    b.Navigation("Patient");
                });
#pragma warning restore 612, 618
        }
    }
}
